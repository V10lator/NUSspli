name: build

on:
  label:
    types:
      - created

jobs:
  clang-format:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: clang-format
        run: |
          git submodule update --init --recursive
          docker run --rm -v ${PWD}:/src wiiuenv/clang-format:13.0.0-2 -e ./src/gtitles.c -e ./src/SDL_FontCache.c -e ./include/SDL_FontCache.h -r ./src ./include
  build-binary:
    name: Build binary
    runs-on: ubuntu-20.04
    needs: clang-format
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get version from tag
        id: tag
        run: |
          echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      - name: Get isPrerelease from tag
        id: prerelease
        run: echo "isPrerelease=${{ startsWith(steps.tag.outputs.tag, 'v') && contains(steps.tag.outputs.tag, '.') && !endsWith(steps.tag.outputs.tag, '.') && contains(steps.tag.outputs.tag, '-ALPHA') || contains(steps.tag.outputs.tag, '-BETA') }}" >> $GITHUB_OUTPUT
      - name: Docker Layer Caching
        uses: jpribyl/action-docker-layer-caching@v0.1.1
        continue-on-error: true
        with:
          key: nusspli-docker-cache-{hash}
          restore-keys: |
            nusspli-docker-cache-
      - name: Build debug artifacts
        if: ${{ startsWith(steps.tag.outputs.tag, 'v') && contains(steps.tag.outputs.tag, '.') && !endsWith(steps.tag.outputs.tag, '.') && (contains(steps.tag.outputs.tag, '-ALPHA') || contains(steps.tag.outputs.tag, '-BETA')) }}
        run: |
          docker build . -t builder
          echo ${{ secrets.ENC_KEY }} > encryptKeyWith
          docker run --rm -v ${PWD}:/project builder python3 build.py --debug --version ${{ steps.tag.outputs.tag }}
      - name: Build all artifacts
        if: ${{ startsWith(steps.tag.outputs.tag, 'v') && contains(steps.tag.outputs.tag, '.') && !endsWith(steps.tag.outputs.tag, '.') && !(contains(steps.tag.outputs.tag, '-ALPHA') && !contains(steps.tag.outputs.tag, '-BETA')) }}
        run: |
          docker build . -t builder
          echo ${{ secrets.ENC_KEY }} > encryptKeyWith
          docker run --rm -v ${PWD}:/project builder python3 build.py --debug --release --version ${{ steps.tag.outputs.tag }}
      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v4
        if: ${{ startsWith(steps.tag.outputs.tag, 'v') && contains(steps.tag.outputs.tag, '.') && !endsWith(steps.tag.outputs.tag, '.') && !contains(steps.tag.outputs.tag, '-ALPHA') && !contains(steps.tag.outputs.tag, '-BETA') }}
        with:
          ignorePreReleases: true
      - name: Publish release
        if: ${{ startsWith(steps.tag.outputs.tag, 'v') && contains(steps.tag.outputs.tag, '.') && !endsWith(steps.tag.outputs.tag, '.') && !contains(steps.tag.outputs.tag, '-ALPHA') && !contains(steps.tag.outputs.tag, '-BETA') }}
        uses: ncipollo/release-action@v1
        with:
          prerelease: ${{ steps.prerelease.outputs.isPrerelease }}
          tag: v${{ steps.tag.outputs.tag }}
          name: v${{ steps.tag.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifactErrorsFailBuild: true
          artifactContentType: application/zip
          body: ${{steps.build_changelog.outputs.changelog}}
          artifacts: |
            zips/NUSspli-${{ steps.tag.outputs.tag }}-Aroma.zip
            zips/NUSspli-${{ steps.tag.outputs.tag }}-Aroma-DEBUG.zip
            zips/NUSspli-${{ steps.tag.outputs.tag }}-Channel.zip
            zips/NUSspli-${{ steps.tag.outputs.tag }}-Channel-DEBUG.zip
            zips/NUSspli-${{ steps.tag.outputs.tag }}-HBL.zip
            zips/NUSspli-${{ steps.tag.outputs.tag }}-HBL-DEBUG.zip
            zips/NUSspli-${{ steps.tag.outputs.tag }}-Lite.zip
            zips/NUSspli-${{ steps.tag.outputs.tag }}-Lite-DEBUG.zip
